{"ast":null,"code":"import { database } from \"./firebase.js\";\nimport { ref, get } from \"firebase/database\";\nfunction parseCustomTimestamp(timestampStr) {\n  const [datePart, timePart] = timestampStr.split(' ');\n  if (!datePart || !timePart) return new Date('invalid');\n  const [day, month, year] = datePart.split('-').map(Number);\n  const [hours, minutes, seconds] = timePart.split(':').map(Number);\n  return new Date(year, month - 1, day, hours, minutes, seconds);\n}\nexport const fetchFoundItems = async () => {\n  try {\n    const foundRef = ref(database, \"found\");\n    const snapshot = await get(foundRef);\n    if (!snapshot.exists()) {\n      console.log(\"No found items found.\");\n      return [];\n    }\n    let foundItems = [];\n    snapshot.forEach(userSnapshot => {\n      userSnapshot.forEach(itemSnapshot => {\n        foundItems.push({\n          id: itemSnapshot.key,\n          ...itemSnapshot.val()\n        });\n      });\n    });\n    foundItems.sort((a, b) => {\n      const timeA = parseCustomTimestamp(a.timestamp).getTime();\n      const timeB = parseCustomTimestamp(b.timestamp).getTime();\n      return timeB - timeA;\n    });\n    return foundItems;\n  } catch (error) {\n    console.error(\"Error fetching found items:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["database","ref","get","parseCustomTimestamp","timestampStr","datePart","timePart","split","Date","day","month","year","map","Number","hours","minutes","seconds","fetchFoundItems","foundRef","snapshot","exists","console","log","foundItems","forEach","userSnapshot","itemSnapshot","push","id","key","val","sort","a","b","timeA","timestamp","getTime","timeB","error"],"sources":["E:/Btech 4th sem/mini project/Mini project/src/Components/found.js"],"sourcesContent":["import { database } from \"./firebase.js\";\r\nimport { ref, get } from \"firebase/database\";\r\n\r\nfunction parseCustomTimestamp(timestampStr) {\r\n  const [datePart, timePart] = timestampStr.split(' ');\r\n  if (!datePart || !timePart) return new Date('invalid');\r\n  const [day, month, year] = datePart.split('-').map(Number);\r\n  const [hours, minutes, seconds] = timePart.split(':').map(Number);\r\n  return new Date(year, month - 1, day, hours, minutes, seconds);\r\n}\r\n\r\nexport const fetchFoundItems = async () => {\r\n  try {\r\n    const foundRef = ref(database, \"found\");\r\n    const snapshot = await get(foundRef);\r\n    if (!snapshot.exists()) {\r\n      console.log(\"No found items found.\");\r\n      return [];\r\n    }\r\n    let foundItems = [];\r\n    snapshot.forEach((userSnapshot) => {\r\n      userSnapshot.forEach((itemSnapshot) => {\r\n        foundItems.push({\r\n          id: itemSnapshot.key,\r\n          ...itemSnapshot.val(),\r\n        });\r\n      });\r\n    });\r\n    foundItems.sort((a, b) => {\r\n      const timeA = parseCustomTimestamp(a.timestamp).getTime();\r\n      const timeB = parseCustomTimestamp(b.timestamp).getTime();\r\n      return timeB - timeA;\r\n    });\r\n    return foundItems;\r\n  } catch (error) {\r\n    console.error(\"Error fetching found items:\", error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AAE5C,SAASC,oBAAoBA,CAACC,YAAY,EAAE;EAC1C,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGF,YAAY,CAACG,KAAK,CAAC,GAAG,CAAC;EACpD,IAAI,CAACF,QAAQ,IAAI,CAACC,QAAQ,EAAE,OAAO,IAAIE,IAAI,CAAC,SAAS,CAAC;EACtD,MAAM,CAACC,GAAG,EAAEC,KAAK,EAAEC,IAAI,CAAC,GAAGN,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,CAACK,GAAG,CAACC,MAAM,CAAC;EAC1D,MAAM,CAACC,KAAK,EAAEC,OAAO,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACK,GAAG,CAACC,MAAM,CAAC;EACjE,OAAO,IAAIL,IAAI,CAACG,IAAI,EAAED,KAAK,GAAG,CAAC,EAAED,GAAG,EAAEK,KAAK,EAAEC,OAAO,EAAEC,OAAO,CAAC;AAChE;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAGjB,GAAG,CAACD,QAAQ,EAAE,OAAO,CAAC;IACvC,MAAMmB,QAAQ,GAAG,MAAMjB,GAAG,CAACgB,QAAQ,CAAC;IACpC,IAAI,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;MACtBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,OAAO,EAAE;IACX;IACA,IAAIC,UAAU,GAAG,EAAE;IACnBJ,QAAQ,CAACK,OAAO,CAAEC,YAAY,IAAK;MACjCA,YAAY,CAACD,OAAO,CAAEE,YAAY,IAAK;QACrCH,UAAU,CAACI,IAAI,CAAC;UACdC,EAAE,EAAEF,YAAY,CAACG,GAAG;UACpB,GAAGH,YAAY,CAACI,GAAG,CAAC;QACtB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACFP,UAAU,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACxB,MAAMC,KAAK,GAAG/B,oBAAoB,CAAC6B,CAAC,CAACG,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC;MACzD,MAAMC,KAAK,GAAGlC,oBAAoB,CAAC8B,CAAC,CAACE,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC;MACzD,OAAOC,KAAK,GAAGH,KAAK;IACtB,CAAC,CAAC;IACF,OAAOX,UAAU;EACnB,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdjB,OAAO,CAACiB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}