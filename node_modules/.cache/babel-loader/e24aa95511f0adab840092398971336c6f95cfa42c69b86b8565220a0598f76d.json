{"ast":null,"code":"var _jsxFileName = \"E:\\\\Btech 4th sem\\\\mini project\\\\Mini project\\\\src\\\\Components\\\\Found.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { fetchFoundItems } from \"./found.js\";\nimport { getItemQuestion } from \"./getItemQuestion.js\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../Components/Found.css\";\nimport emptyImage from \"../Assets/empty.png\";\nimport Loading from \"./loding\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport { reportItemResponse } from \"./report_item_response\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Found = ({\n  setLoading\n}) => {\n  _s();\n  const [foundItems, setFoundItems] = useState([]);\n  const [loadingItems, setLocalLoading] = useState(true);\n  const [showClaimModal, setShowClaimModal] = useState(false);\n  const [claimQuestion, setClaimQuestion] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [answer, setAnswer] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [crop, setCrop] = useState({\n    unit: \"px\",\n    x: 0,\n    y: 0,\n    width: 450,\n    height: 450,\n    aspect: 1\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const imgRef = useRef(null);\n  const canvasRef = useRef(null);\n  const navigate = useNavigate();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    const loadItems = async () => {\n      setLoading === null || setLoading === void 0 ? void 0 : setLoading(true);\n      setLocalLoading(true);\n      const items = await fetchFoundItems();\n      setFoundItems(items);\n      setLoading === null || setLoading === void 0 ? void 0 : setLoading(false);\n      setLocalLoading(false);\n    };\n    loadItems();\n  }, [setLoading]);\n  const handleLostClick = () => {\n    navigate(\"/lost\");\n  };\n  const handleFoundClick = () => {\n    navigate(\"/found\");\n  };\n  const handleListingClick = () => {\n    navigate(\"/listing\");\n  };\n  const handleMyChatClick = () => {\n    navigate(\"/chat\");\n  };\n  const handleMyResponseClick = () => {\n    navigate(\"/response\");\n  };\n  const handleMyHomeClick = () => {\n    navigate(\"/\");\n  };\n  const handleClaimClick = async (userId, itemId) => {\n    try {\n      const result = await getItemQuestion(userId, itemId);\n      if (result.success) {\n        setClaimQuestion(result.question);\n      } else {\n        setClaimQuestion(\"No question available. Please provide your answer.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching question:\", error);\n      setClaimQuestion(\"Error fetching question. Please provide your answer.\");\n    }\n    setSelectedItem({\n      userId,\n      itemId\n    });\n    setShowClaimModal(true);\n  };\n  const handleClaimClose = () => {\n    setShowClaimModal(false);\n    setClaimQuestion(\"\");\n    setSelectedItem(null);\n    setImage(null);\n    setImagePreview(null);\n    setCrop({\n      unit: \"px\",\n      x: 0,\n      y: 0,\n      width: 450,\n      height: 450,\n      aspect: 1\n    });\n    setCompletedCrop(null);\n    setAnswer(\"\");\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImage(reader.result);\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleCropComplete = c => {\n    setCompletedCrop(c);\n  };\n  const getCroppedImg = async () => {\n    if (!imgRef.current || !completedCrop) return null;\n    const canvas = canvasRef.current;\n    const imageElement = imgRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const scaleX = imageElement.naturalWidth / imageElement.width;\n    const scaleY = imageElement.naturalHeight / imageElement.height;\n    canvas.width = completedCrop.width;\n    canvas.height = completedCrop.height;\n    ctx.drawImage(imageElement, completedCrop.x * scaleX, completedCrop.y * scaleY, completedCrop.width * scaleX, completedCrop.height * scaleY, 0, 0, completedCrop.width, completedCrop.height);\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          reject(new Error(\"Canvas is empty\"));\n          return;\n        }\n        resolve(blob);\n      }, \"image/jpeg\");\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    const croppedBlob = await getCroppedImg();\n    if (!croppedBlob) {\n      alert(\"Failed to process the image. Please try again.\");\n      setIsSubmitting(false);\n      return;\n    }\n    if (!answer.trim()) {\n      alert(\"Please provide an answer.\");\n      setIsSubmitting(false);\n      return;\n    }\n    try {\n      const result = await reportItemResponse(selectedItem.itemId, answer, croppedBlob);\n      if (result.success) {\n        toast.success(\"Response submitted successfully!\");\n        handleClaimClose();\n      } else {\n        toast.error(\"Error: \" + result.error);\n      }\n    } catch (error) {\n      console.error(\"Error submitting response:\", error);\n      alert(\"Failed to submit response.\");\n    }\n    setIsSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Loading, {\n      loading: loadingItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"redlabel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar_lost\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home_nav\",\n        onClick: handleMyHomeClick,\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lost_nav1\",\n        onClick: handleLostClick,\n        children: \"Lost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"found_nav1\",\n        onClick: handleFoundClick,\n        children: \"Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listing_nav\",\n        onClick: handleListingClick,\n        children: \"My Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response_nav\",\n        onClick: handleMyResponseClick,\n        children: \"My Responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_nav\",\n        onClick: handleMyChatClick,\n        children: \"My Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), loadingItems ? null : foundItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: \"600px\",\n        overflowY: \"auto\",\n        padding: \"20px\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"8px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"found-container\",\n        children: foundItems.map(item => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"18rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: item.imageUrl || \"https://via.placeholder.com/150\",\n            alt: \"Found Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => handleClaimClick(item.userId, item.id),\n              children: \"Claim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: emptyImage,\n        alt: \"No items found\",\n        style: {\n          width: \"300px\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No items found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showClaimModal,\n      onHide: handleClaimClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Answer the question to claim item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: isSubmitting ? /*#__PURE__*/_jsxDEV(Loading, {\n          loading: isSubmitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: claimQuestion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              placeholder: \"Answer the question...\",\n              required: true,\n              value: answer,\n              onChange: e => setAnswer(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleImageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Crop Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ReactCrop, {\n              crop: crop,\n              onChange: newCrop => setCrop(newCrop),\n              onComplete: handleCropComplete,\n              aspect: 1,\n              keepSelection: true,\n              locked: false,\n              resizeMode: \"corner\",\n              minWidth: 100,\n              minHeight: 100,\n              ruleOfThirds: true,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                ref: imgRef,\n                src: imagePreview,\n                alt: \"Preview\",\n                style: {\n                  maxWidth: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            className: \"mt-3\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Found, \"I6XSV/bChatBgYWLoydn54Pr4z4=\", false, function () {\n  return [useNavigate];\n});\n_c = Found;\nexport default Found;\nvar _c;\n$RefreshReg$(_c, \"Found\");","map":{"version":3,"names":["React","useState","useEffect","useRef","fetchFoundItems","getItemQuestion","Card","Button","emptyImage","Loading","Modal","Form","useNavigate","ReactCrop","reportItemResponse","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Found","setLoading","_s","foundItems","setFoundItems","loadingItems","setLocalLoading","showClaimModal","setShowClaimModal","claimQuestion","setClaimQuestion","selectedItem","setSelectedItem","answer","setAnswer","image","setImage","imagePreview","setImagePreview","crop","setCrop","unit","x","y","width","height","aspect","completedCrop","setCompletedCrop","imgRef","canvasRef","navigate","isSubmitting","setIsSubmitting","loadItems","items","handleLostClick","handleFoundClick","handleListingClick","handleMyChatClick","handleMyResponseClick","handleMyHomeClick","handleClaimClick","userId","itemId","result","success","question","error","console","handleClaimClose","handleImageChange","e","file","target","files","reader","FileReader","onloadend","readAsDataURL","handleCropComplete","c","getCroppedImg","current","canvas","imageElement","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","drawImage","Promise","resolve","reject","toBlob","blob","Error","handleSubmit","preventDefault","croppedBlob","alert","trim","children","loading","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","style","maxHeight","overflowY","padding","border","borderRadius","map","item","Img","variant","src","imageUrl","alt","Body","Title","itemName","Text","description","id","textAlign","marginTop","show","onHide","centered","Header","closeButton","onSubmit","Group","Label","Control","as","rows","placeholder","required","value","onChange","type","accept","newCrop","onComplete","keepSelection","locked","resizeMode","minWidth","minHeight","ruleOfThirds","ref","maxWidth","display","_c","$RefreshReg$"],"sources":["E:/Btech 4th sem/mini project/Mini project/src/Components/Found.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { fetchFoundItems } from \"./found.js\";\r\nimport { getItemQuestion } from \"./getItemQuestion.js\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../Components/Found.css\";\r\nimport emptyImage from \"../Assets/empty.png\";\r\nimport Loading from \"./loding\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport { reportItemResponse } from \"./report_item_response\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Found = ({ setLoading }) => {\r\n  const [foundItems, setFoundItems] = useState([]);\r\n  const [loadingItems, setLocalLoading] = useState(true);\r\n  const [showClaimModal, setShowClaimModal] = useState(false);\r\n  const [claimQuestion, setClaimQuestion] = useState(\"\");\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [crop, setCrop] = useState({\r\n    unit: \"px\",\r\n    x: 0,\r\n    y: 0,\r\n    width: 450,\r\n    height: 450,\r\n    aspect: 1,\r\n  });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n  const imgRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadItems = async () => {\r\n      setLoading?.(true);\r\n      setLocalLoading(true);\r\n      const items = await fetchFoundItems();\r\n      setFoundItems(items);\r\n      setLoading?.(false);\r\n      setLocalLoading(false);\r\n    };\r\n    loadItems();\r\n  }, [setLoading]);\r\n\r\n  const handleLostClick = () => {\r\n    navigate(\"/lost\");\r\n  };\r\n\r\n  const handleFoundClick = () => {\r\n    navigate(\"/found\");\r\n  };\r\n\r\n  const handleListingClick = () => {\r\n    navigate(\"/listing\");\r\n  };\r\n\r\n  const handleMyChatClick = () => {\r\n    navigate(\"/chat\");\r\n  };\r\n\r\n  const handleMyResponseClick = () => {\r\n    navigate(\"/response\");\r\n  };\r\n\r\n  const handleMyHomeClick = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleClaimClick = async (userId, itemId) => {\r\n    try {\r\n      const result = await getItemQuestion(userId, itemId);\r\n      if (result.success) {\r\n        setClaimQuestion(result.question);\r\n      } else {\r\n        setClaimQuestion(\"No question available. Please provide your answer.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching question:\", error);\r\n      setClaimQuestion(\"Error fetching question. Please provide your answer.\");\r\n    }\r\n    setSelectedItem({ userId, itemId });\r\n    setShowClaimModal(true);\r\n  };\r\n\r\n  const handleClaimClose = () => {\r\n    setShowClaimModal(false);\r\n    setClaimQuestion(\"\");\r\n    setSelectedItem(null);\r\n    setImage(null);\r\n    setImagePreview(null);\r\n    setCrop({\r\n      unit: \"px\",\r\n      x: 0,\r\n      y: 0,\r\n      width: 450,\r\n      height: 450,\r\n      aspect: 1,\r\n    });\r\n    setCompletedCrop(null);\r\n    setAnswer(\"\");\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImage(reader.result);\r\n        setImagePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleCropComplete = (c) => {\r\n    setCompletedCrop(c);\r\n  };\r\n\r\n  const getCroppedImg = async () => {\r\n    if (!imgRef.current || !completedCrop) return null;\r\n    const canvas = canvasRef.current;\r\n    const imageElement = imgRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const scaleX = imageElement.naturalWidth / imageElement.width;\r\n    const scaleY = imageElement.naturalHeight / imageElement.height;\r\n    canvas.width = completedCrop.width;\r\n    canvas.height = completedCrop.height;\r\n    ctx.drawImage(\r\n      imageElement,\r\n      completedCrop.x * scaleX,\r\n      completedCrop.y * scaleY,\r\n      completedCrop.width * scaleX,\r\n      completedCrop.height * scaleY,\r\n      0,\r\n      0,\r\n      completedCrop.width,\r\n      completedCrop.height\r\n    );\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob((blob) => {\r\n        if (!blob) {\r\n          reject(new Error(\"Canvas is empty\"));\r\n          return;\r\n        }\r\n        resolve(blob);\r\n      }, \"image/jpeg\");\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    const croppedBlob = await getCroppedImg();\r\n    if (!croppedBlob) {\r\n      alert(\"Failed to process the image. Please try again.\");\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n    if (!answer.trim()) {\r\n      alert(\"Please provide an answer.\");\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n    try {\r\n      const result = await reportItemResponse(\r\n        selectedItem.itemId,\r\n        answer,\r\n        croppedBlob\r\n      );\r\n      if (result.success) {\r\n        toast.success(\"Response submitted successfully!\");\r\n        handleClaimClose();\r\n      } else {\r\n        toast.error(\"Error: \" + result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting response:\", error);\r\n      alert(\"Failed to submit response.\");\r\n    }\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Loading loading={loadingItems} />\r\n      <div className=\"redlabel\"></div>\r\n      <div className=\"navbar_lost\">\r\n        <div className=\"home_nav\" onClick={handleMyHomeClick}>Home</div>\r\n        <div className=\"lost_nav1\" onClick={handleLostClick}>Lost</div>\r\n        <div className=\"found_nav1\" onClick={handleFoundClick}>Found</div>\r\n        <div className=\"listing_nav\" onClick={handleListingClick}>My Listing</div>\r\n        <div className=\"response_nav\" onClick={handleMyResponseClick}>My Responses</div>\r\n        <div className=\"chat_nav\" onClick={handleMyChatClick}>My Chats</div>\r\n      </div>\r\n      {loadingItems ? null : foundItems.length > 0 ? (\r\n        <div style={{ maxHeight: \"600px\", overflowY: \"auto\", padding: \"20px\", border: \"1px solid #ddd\", borderRadius: \"8px\" }}>\r\n          <div className=\"found-container\">\r\n            {foundItems.map((item) => (\r\n              <Card key={item.id} style={{ width: \"18rem\" }}>\r\n                <Card.Img variant=\"top\" src={item.imageUrl || \"https://via.placeholder.com/150\"} alt=\"Found Item\" />\r\n                <Card.Body>\r\n                  <Card.Title>{item.itemName}</Card.Title>\r\n                  <Card.Text>{item.description}</Card.Text>\r\n                  <Button variant=\"success\" onClick={() => handleClaimClick(item.userId, item.id)}>\r\n                    Claim\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n          <img src={emptyImage} alt=\"No items found\" style={{ width: \"300px\", height: \"auto\" }} />\r\n          <h3>No items found</h3>\r\n        </div>\r\n      )}\r\n      <Modal show={showClaimModal} onHide={handleClaimClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Answer the question to claim item</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {isSubmitting ? (\r\n            <Loading loading={isSubmitting} />\r\n          ) : (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>{claimQuestion}</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} placeholder=\"Answer the question...\" required value={answer} onChange={(e) => setAnswer(e.target.value)} />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Upload Image</Form.Label>\r\n                <Form.Control type=\"file\" accept=\"image/*\" onChange={handleImageChange} required />\r\n              </Form.Group>\r\n              {imagePreview && (\r\n                <div>\r\n                  <p>Crop Image:</p>\r\n                  <ReactCrop\r\n                    crop={crop}\r\n                    onChange={(newCrop) => setCrop(newCrop)}\r\n                    onComplete={handleCropComplete}\r\n                    aspect={1}\r\n                    keepSelection\r\n                    locked={false}\r\n                    resizeMode=\"corner\"\r\n                    minWidth={100}\r\n                    minHeight={100}\r\n                    ruleOfThirds\r\n                  >\r\n                    <img ref={imgRef} src={imagePreview} alt=\"Preview\" style={{ maxWidth: \"100%\" }} />\r\n                  </ReactCrop>\r\n                </div>\r\n              )}\r\n              <canvas ref={canvasRef} style={{ display: \"none\" }}></canvas>\r\n              <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Found;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}