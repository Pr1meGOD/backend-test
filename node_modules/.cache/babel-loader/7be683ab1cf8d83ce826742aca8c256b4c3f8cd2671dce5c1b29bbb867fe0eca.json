{"ast":null,"code":"import { ref, get } from \"firebase/database\";\nimport { database } from \"./firebase.js\";\nexport async function getItemQuestion(userId, itemId) {\n  try {\n    // 1. Check in the \"lost\" node for the specific user\n    let itemRef = ref(database, `lost/${userId}/${itemId}`);\n    let snapshot = await get(itemRef);\n    if (snapshot.exists()) {\n      const data = snapshot.val();\n      if (data.question) {\n        return {\n          success: true,\n          question: data.question\n        };\n      }\n    }\n\n    // 2. Check in the \"found\" node for the specific user\n    itemRef = ref(database, `found/${userId}/${itemId}`);\n    snapshot = await get(itemRef);\n    if (snapshot.exists()) {\n      const data = snapshot.val();\n      if (data.question) {\n        return {\n          success: true,\n          question: data.question\n        };\n      }\n    }\n\n    // 3. If not found, search all lost items (in case the userId is not known)\n    const lostRef = ref(database, `lost`);\n    let allSnapshot = await get(lostRef);\n    if (allSnapshot.exists()) {\n      const lostData = allSnapshot.val();\n      for (const uid in lostData) {\n        if (lostData[uid] && lostData[uid][itemId]) {\n          const itemData = lostData[uid][itemId];\n          if (itemData.question) {\n            return {\n              success: true,\n              question: itemData.question\n            };\n          }\n        }\n      }\n    }\n\n    // 4. Also search all found items if still not found\n    const foundRef = ref(database, `found`);\n    snapshot = await get(foundRef);\n    if (snapshot.exists()) {\n      const foundData = snapshot.val();\n      for (const uid in foundData) {\n        if (foundData[uid] && foundData[uid][itemId]) {\n          const itemData = foundData[uid][itemId];\n          if (itemData.question) {\n            return {\n              success: true,\n              question: itemData.question\n            };\n          }\n        }\n      }\n    }\n    return {\n      success: false,\n      error: \"Item not found in database.\"\n    };\n  } catch (error) {\n    console.error(\"Error fetching item question:\", error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n}","map":{"version":3,"names":["ref","get","database","getItemQuestion","userId","itemId","itemRef","snapshot","exists","data","val","question","success","lostRef","allSnapshot","lostData","uid","itemData","foundRef","foundData","error","console","message"],"sources":["E:/Btech 4th sem/mini project/Mini project/src/Components/getItemQuestion.js"],"sourcesContent":["import { ref, get } from \"firebase/database\";\r\nimport { database } from \"./firebase.js\";\r\n\r\nexport async function getItemQuestion(userId, itemId) {\r\n  try {\r\n    // 1. Check in the \"lost\" node for the specific user\r\n    let itemRef = ref(database, `lost/${userId}/${itemId}`);\r\n    let snapshot = await get(itemRef);\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.val();\r\n      if (data.question) {\r\n        return { success: true, question: data.question };\r\n      }\r\n    }\r\n    \r\n    // 2. Check in the \"found\" node for the specific user\r\n    itemRef = ref(database, `found/${userId}/${itemId}`);\r\n    snapshot = await get(itemRef);\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.val();\r\n      if (data.question) {\r\n        return { success: true, question: data.question };\r\n      }\r\n    }\r\n    \r\n    // 3. If not found, search all lost items (in case the userId is not known)\r\n    const lostRef = ref(database, `lost`);\r\n    let allSnapshot = await get(lostRef);\r\n    if (allSnapshot.exists()) {\r\n      const lostData = allSnapshot.val();\r\n      for (const uid in lostData) {\r\n        if (lostData[uid] && lostData[uid][itemId]) {\r\n          const itemData = lostData[uid][itemId];\r\n          if (itemData.question) {\r\n            return { success: true, question: itemData.question };\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 4. Also search all found items if still not found\r\n    const foundRef = ref(database, `found`);\r\n    snapshot = await get(foundRef);\r\n    if (snapshot.exists()) {\r\n      const foundData = snapshot.val();\r\n      for (const uid in foundData) {\r\n        if (foundData[uid] && foundData[uid][itemId]) {\r\n          const itemData = foundData[uid][itemId];\r\n          if (itemData.question) {\r\n            return { success: true, question: itemData.question };\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return { success: false, error: \"Item not found in database.\" };\r\n  } catch (error) {\r\n    console.error(\"Error fetching item question:\", error);\r\n    return { success: false, error: error.message };\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}