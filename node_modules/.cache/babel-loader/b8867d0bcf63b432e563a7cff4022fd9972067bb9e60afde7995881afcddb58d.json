{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"./firebase\";\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nfunction Register({\n  setHandlers\n}) {\n  _s();\n  const [emailSent, setEmailSent] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (setHandlers) {\n      setHandlers({\n        handleSendVerification,\n        handleRegister\n      });\n    }\n  }, []);\n  const handleSendVerification = async e => {\n    var _document$getElementB, _document$getElementB2, _document$getElementB3;\n    e.preventDefault();\n    const email = (_document$getElementB = document.getElementById(\"mail\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.value;\n    const password = (_document$getElementB2 = document.getElementById(\"pass1\")) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.value;\n    const confirmPassword = (_document$getElementB3 = document.getElementById(\"pass2\")) === null || _document$getElementB3 === void 0 ? void 0 : _document$getElementB3.value;\n    if (!email || !password || !confirmPassword) {\n      toast.error(\"All fields are required!\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match!\");\n      return;\n    }\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      await sendEmailVerification(user);\n      toast.success(\"Verification email sent! Please check your email.\");\n      setEmailSent(true);\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    const user = auth.currentUser;\n    if (!user) {\n      toast.error(\"No user found! Please send verification email first.\");\n      return;\n    }\n    await user.reload();\n    if (!user.emailVerified) {\n      toast.error(\"Please verify your email before registering.\");\n      return;\n    }\n    toast.success(\"Registration successful!\");\n    navigate(\"/page3\");\n  };\n  return null;\n}\n_s(Register, \"XLBYSnL3a3QTYzTv34EfCkL1Glk=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","auth","createUserWithEmailAndPassword","sendEmailVerification","useNavigate","toast","Register","setHandlers","_s","emailSent","setEmailSent","navigate","handleSendVerification","handleRegister","e","_document$getElementB","_document$getElementB2","_document$getElementB3","preventDefault","email","document","getElementById","value","password","confirmPassword","error","userCredential","user","success","message","currentUser","reload","emailVerified","_c","$RefreshReg$"],"sources":["E:/Btech 4th sem/mini project/Mini project/src/Components/register.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { auth } from \"./firebase\";\r\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Register({ setHandlers }) {\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (setHandlers) {\r\n      setHandlers({\r\n        handleSendVerification,\r\n        handleRegister,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleSendVerification = async (e) => {\r\n    e.preventDefault();\r\n    const email = document.getElementById(\"mail\")?.value;\r\n    const password = document.getElementById(\"pass1\")?.value;\r\n    const confirmPassword = document.getElementById(\"pass2\")?.value;\r\n\r\n    if (!email || !password || !confirmPassword) \r\n    {\r\n      toast.error(\"All fields are required!\");\r\n      return;\r\n\r\n    }\r\n\r\n    if (password !== confirmPassword) \r\n    {\r\n      toast.error(\"Passwords do not match!\");\r\n      return;\r\n\r\n    }\r\n\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n\r\n      await sendEmailVerification(user);\r\n      toast.success(\"Verification email sent! Please check your email.\");\r\n      setEmailSent(true);\r\n    } \r\n    catch (error) \r\n    {\r\n      toast.error(error.message);\r\n\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    const user = auth.currentUser;\r\n\r\n    if (!user) \r\n    {\r\n      toast.error(\"No user found! Please send verification email first.\");\r\n      return;\r\n\r\n    }\r\n\r\n    await user.reload();\r\n    if (!user.emailVerified) \r\n    {\r\n      toast.error(\"Please verify your email before registering.\");\r\n      return;\r\n\r\n    }\r\n\r\n    toast.success(\"Registration successful!\");\r\n    navigate(\"/page3\");\r\n  };\r\n\r\n  return null;\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,YAAY;AACjC,SAASC,8BAA8B,EAAEC,qBAAqB,QAAQ,eAAe;AACrF,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAE9C,SAASC,QAAQA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMY,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACd,IAAIO,WAAW,EAAE;MACfA,WAAW,CAAC;QACVK,sBAAsB;QACtBC;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,sBAAsB,GAAG,MAAOE,CAAC,IAAK;IAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IAC1CH,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,IAAAJ,qBAAA,GAAGK,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,cAAAN,qBAAA,uBAA/BA,qBAAA,CAAiCO,KAAK;IACpD,MAAMC,QAAQ,IAAAP,sBAAA,GAAGI,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,cAAAL,sBAAA,uBAAhCA,sBAAA,CAAkCM,KAAK;IACxD,MAAME,eAAe,IAAAP,sBAAA,GAAGG,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,cAAAJ,sBAAA,uBAAhCA,sBAAA,CAAkCK,KAAK;IAE/D,IAAI,CAACH,KAAK,IAAI,CAACI,QAAQ,IAAI,CAACC,eAAe,EAC3C;MACEnB,KAAK,CAACoB,KAAK,CAAC,0BAA0B,CAAC;MACvC;IAEF;IAEA,IAAIF,QAAQ,KAAKC,eAAe,EAChC;MACEnB,KAAK,CAACoB,KAAK,CAAC,yBAAyB,CAAC;MACtC;IAEF;IAEA,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMxB,8BAA8B,CAACD,IAAI,EAAEkB,KAAK,EAAEI,QAAQ,CAAC;MAClF,MAAMI,IAAI,GAAGD,cAAc,CAACC,IAAI;MAEhC,MAAMxB,qBAAqB,CAACwB,IAAI,CAAC;MACjCtB,KAAK,CAACuB,OAAO,CAAC,mDAAmD,CAAC;MAClElB,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CACD,OAAOe,KAAK,EACZ;MACEpB,KAAK,CAACoB,KAAK,CAACA,KAAK,CAACI,OAAO,CAAC;IAE5B;EACF,CAAC;EAED,MAAMhB,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,MAAMS,IAAI,GAAG1B,IAAI,CAAC6B,WAAW;IAE7B,IAAI,CAACH,IAAI,EACT;MACEtB,KAAK,CAACoB,KAAK,CAAC,sDAAsD,CAAC;MACnE;IAEF;IAEA,MAAME,IAAI,CAACI,MAAM,CAAC,CAAC;IACnB,IAAI,CAACJ,IAAI,CAACK,aAAa,EACvB;MACE3B,KAAK,CAACoB,KAAK,CAAC,8CAA8C,CAAC;MAC3D;IAEF;IAEApB,KAAK,CAACuB,OAAO,CAAC,0BAA0B,CAAC;IACzCjB,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,OAAO,IAAI;AACb;AAACH,EAAA,CAxEQF,QAAQ;EAAA,QAEEF,WAAW;AAAA;AAAA6B,EAAA,GAFrB3B,QAAQ;AA0EjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}