{"ast":null,"code":"import { database } from \"./firebase.js\";\nimport { ref, get } from \"firebase/database\";\nimport { auth } from \"./firebase.js\";\nfunction parseCustomTimestamp(timestampStr) {\n  const [datePart, timePart] = timestampStr.split(' ');\n  if (!datePart || !timePart) return new Date('invalid');\n  const [day, month, year] = datePart.split('-').map(Number);\n  const [hours, minutes, seconds] = timePart.split(':').map(Number);\n  return new Date(year, month - 1, day, hours, minutes, seconds);\n}\nexport const fetchLostItems = async () => {\n  try {\n    const lostRef = ref(database, \"lost\");\n    const snapshot = await get(lostRef);\n    if (!snapshot.exists()) {\n      console.log(\"No lost items found.\");\n      return [];\n    }\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      console.error(\"No user is logged in.\");\n      return [];\n    }\n    const currentUserId = currentUser.uid;\n    let lostItems = [];\n    snapshot.forEach(userSnapshot => {\n      if (userSnapshot.key !== currentUserId) {\n        userSnapshot.forEach(itemSnapshot => {\n          lostItems.push({\n            id: itemSnapshot.key,\n            ...itemSnapshot.val()\n          });\n        });\n      }\n    });\n    lostItems.sort((a, b) => {\n      const timeA = parseCustomTimestamp(a.timestamp).getTime();\n      const timeB = parseCustomTimestamp(b.timestamp).getTime();\n      return timeB - timeA;\n    });\n    return lostItems;\n  } catch (error) {\n    console.error(\"Error fetching lost items:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["database","ref","get","auth","parseCustomTimestamp","timestampStr","datePart","timePart","split","Date","day","month","year","map","Number","hours","minutes","seconds","fetchLostItems","lostRef","snapshot","exists","console","log","currentUser","error","currentUserId","uid","lostItems","forEach","userSnapshot","key","itemSnapshot","push","id","val","sort","a","b","timeA","timestamp","getTime","timeB"],"sources":["E:/Btech 4th sem/mini project/Mini project/src/Components/lost.js"],"sourcesContent":["import { database } from \"./firebase.js\";\r\nimport { ref, get } from \"firebase/database\";\r\nimport { auth } from \"./firebase.js\"; \r\n\r\nfunction parseCustomTimestamp(timestampStr) \r\n{\r\n  const [datePart, timePart] = timestampStr.split(' ');\r\n  if (!datePart || !timePart) return new Date('invalid');\r\n\r\n  const [day, month, year] = datePart.split('-').map(Number);\r\n  const [hours, minutes, seconds] = timePart.split(':').map(Number);\r\n\r\n  return new Date(year, month - 1, day, hours, minutes, seconds);\r\n}\r\n\r\nexport const fetchLostItems = async () => {\r\n  try \r\n  {\r\n    const lostRef = ref(database, \"lost\");\r\n    const snapshot = await get(lostRef);\r\n\r\n    if (!snapshot.exists()) \r\n    {\r\n      console.log(\"No lost items found.\");\r\n      return [];\r\n    }\r\n\r\n\r\n    const currentUser = auth.currentUser;\r\n    if (!currentUser) \r\n    {\r\n      console.error(\"No user is logged in.\");\r\n      return [];\r\n    }\r\n    const currentUserId = currentUser.uid;\r\n\r\n    let lostItems = [];\r\n    snapshot.forEach((userSnapshot) => {\r\n      if (userSnapshot.key !== currentUserId) { \r\n        userSnapshot.forEach((itemSnapshot) => {\r\n          lostItems.push({\r\n            id: itemSnapshot.key,\r\n            ...itemSnapshot.val(),\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n \r\n    lostItems.sort((a, b) => {\r\n      const timeA = parseCustomTimestamp(a.timestamp).getTime();\r\n      const timeB = parseCustomTimestamp(b.timestamp).getTime();\r\n      return timeB - timeA;\r\n    });\r\n\r\n    return lostItems;\r\n  } \r\n  catch (error) \r\n  {\r\n    console.error(\"Error fetching lost items:\", error);\r\n    return [];\r\n\r\n    \r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AAC5C,SAASC,IAAI,QAAQ,eAAe;AAEpC,SAASC,oBAAoBA,CAACC,YAAY,EAC1C;EACE,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGF,YAAY,CAACG,KAAK,CAAC,GAAG,CAAC;EACpD,IAAI,CAACF,QAAQ,IAAI,CAACC,QAAQ,EAAE,OAAO,IAAIE,IAAI,CAAC,SAAS,CAAC;EAEtD,MAAM,CAACC,GAAG,EAAEC,KAAK,EAAEC,IAAI,CAAC,GAAGN,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,CAACK,GAAG,CAACC,MAAM,CAAC;EAC1D,MAAM,CAACC,KAAK,EAAEC,OAAO,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACK,GAAG,CAACC,MAAM,CAAC;EAEjE,OAAO,IAAIL,IAAI,CAACG,IAAI,EAAED,KAAK,GAAG,CAAC,EAAED,GAAG,EAAEK,KAAK,EAAEC,OAAO,EAAEC,OAAO,CAAC;AAChE;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IACA;IACE,MAAMC,OAAO,GAAGlB,GAAG,CAACD,QAAQ,EAAE,MAAM,CAAC;IACrC,MAAMoB,QAAQ,GAAG,MAAMlB,GAAG,CAACiB,OAAO,CAAC;IAEnC,IAAI,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,EACtB;MACEC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC,OAAO,EAAE;IACX;IAGA,MAAMC,WAAW,GAAGrB,IAAI,CAACqB,WAAW;IACpC,IAAI,CAACA,WAAW,EAChB;MACEF,OAAO,CAACG,KAAK,CAAC,uBAAuB,CAAC;MACtC,OAAO,EAAE;IACX;IACA,MAAMC,aAAa,GAAGF,WAAW,CAACG,GAAG;IAErC,IAAIC,SAAS,GAAG,EAAE;IAClBR,QAAQ,CAACS,OAAO,CAAEC,YAAY,IAAK;MACjC,IAAIA,YAAY,CAACC,GAAG,KAAKL,aAAa,EAAE;QACtCI,YAAY,CAACD,OAAO,CAAEG,YAAY,IAAK;UACrCJ,SAAS,CAACK,IAAI,CAAC;YACbC,EAAE,EAAEF,YAAY,CAACD,GAAG;YACpB,GAAGC,YAAY,CAACG,GAAG,CAAC;UACtB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAGFP,SAAS,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACvB,MAAMC,KAAK,GAAGnC,oBAAoB,CAACiC,CAAC,CAACG,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC;MACzD,MAAMC,KAAK,GAAGtC,oBAAoB,CAACkC,CAAC,CAACE,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC;MACzD,OAAOC,KAAK,GAAGH,KAAK;IACtB,CAAC,CAAC;IAEF,OAAOX,SAAS;EAClB,CAAC,CACD,OAAOH,KAAK,EACZ;IACEH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,EAAE;EAGX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}