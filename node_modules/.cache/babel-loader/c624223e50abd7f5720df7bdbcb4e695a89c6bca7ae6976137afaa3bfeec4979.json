{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from './firebase';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    var _document$getElementB, _document$getElementB2;\n    e.preventDefault();\n    const email = (_document$getElementB = document.getElementById(\"email\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.value;\n    const password = (_document$getElementB2 = document.getElementById(\"pass\")) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.value;\n    if (!email || !password) {\n      toast.error(\"All fields are required!\");\n      return;\n    }\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      await user.reload();\n      if (!user.emailVerified) {\n        toast.error(\"Please verify your email before logging in.\");\n        return;\n      }\n      toast.success(\"Login successful!\");\n      navigate(\"/page3\");\n    } catch (error) {\n      if (error.code === \"auth/user-not-found\") {\n        toast.error(\"User not found! Please register.\");\n      } else if (error.code === \"auth/wrong-password\") {\n        toast.error(\"Incorrect password! Please try again.\");\n      } else {\n        toast.error(error.message);\n      }\n    }\n  };\n  return {\n    handleLogin\n  };\n}\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","signInWithEmailAndPassword","auth","useNavigate","toast","Login","_s","navigate","handleLogin","e","_document$getElementB","_document$getElementB2","preventDefault","email","document","getElementById","value","password","error","userCredential","user","reload","emailVerified","success","code","message","_c","$RefreshReg$"],"sources":["E:/Btech 4th sem/mini project/Mini project/src/Components/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from './firebase';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const email = document.getElementById(\"email\")?.value;\r\n    const password = document.getElementById(\"pass\")?.value;\r\n\r\n    if (!email || !password) \r\n    {\r\n      toast.error(\"All fields are required!\");\r\n      return;\r\n      \r\n    }\r\n\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n\r\n      await user.reload();\r\n\r\n      if (!user.emailVerified) \r\n      {\r\n        toast.error(\"Please verify your email before logging in.\");\r\n        return;\r\n\r\n      }\r\n\r\n      toast.success(\"Login successful!\");\r\n      navigate(\"/page3\");\r\n    } \r\n    catch (error) \r\n    {\r\n      if (error.code === \"auth/user-not-found\") \r\n      {\r\n        toast.error(\"User not found! Please register.\");\r\n\r\n      } else if (error.code === \"auth/wrong-password\") \r\n      {\r\n        toast.error(\"Incorrect password! Please try again.\");\r\n\r\n      } else \r\n      {\r\n        toast.error(error.message);\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  return { handleLogin };\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,0BAA0B,QAAQ,eAAe;AAC1D,SAASC,IAAI,QAAQ,YAAY;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9B,MAAMK,WAAW,GAAG,MAAOC,CAAC,IAAK;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IAC/BF,CAAC,CAACG,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,IAAAH,qBAAA,GAAGI,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,cAAAL,qBAAA,uBAAhCA,qBAAA,CAAkCM,KAAK;IACrD,MAAMC,QAAQ,IAAAN,sBAAA,GAAGG,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,cAAAJ,sBAAA,uBAA/BA,sBAAA,CAAiCK,KAAK;IAEvD,IAAI,CAACH,KAAK,IAAI,CAACI,QAAQ,EACvB;MACEb,KAAK,CAACc,KAAK,CAAC,0BAA0B,CAAC;MACvC;IAEF;IAEA,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMlB,0BAA0B,CAACC,IAAI,EAAEW,KAAK,EAAEI,QAAQ,CAAC;MAC9E,MAAMG,IAAI,GAAGD,cAAc,CAACC,IAAI;MAEhC,MAAMA,IAAI,CAACC,MAAM,CAAC,CAAC;MAEnB,IAAI,CAACD,IAAI,CAACE,aAAa,EACvB;QACElB,KAAK,CAACc,KAAK,CAAC,6CAA6C,CAAC;QAC1D;MAEF;MAEAd,KAAK,CAACmB,OAAO,CAAC,mBAAmB,CAAC;MAClChB,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CACD,OAAOW,KAAK,EACZ;MACE,IAAIA,KAAK,CAACM,IAAI,KAAK,qBAAqB,EACxC;QACEpB,KAAK,CAACc,KAAK,CAAC,kCAAkC,CAAC;MAEjD,CAAC,MAAM,IAAIA,KAAK,CAACM,IAAI,KAAK,qBAAqB,EAC/C;QACEpB,KAAK,CAACc,KAAK,CAAC,uCAAuC,CAAC;MAEtD,CAAC,MACD;QACEd,KAAK,CAACc,KAAK,CAACA,KAAK,CAACO,OAAO,CAAC;MAE5B;IACF;EACF,CAAC;EAED,OAAO;IAAEjB;EAAY,CAAC;AACxB;AAACF,EAAA,CAlDQD,KAAK;EAAA,QACKF,WAAW;AAAA;AAAAuB,EAAA,GADrBrB,KAAK;AAoDd,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}