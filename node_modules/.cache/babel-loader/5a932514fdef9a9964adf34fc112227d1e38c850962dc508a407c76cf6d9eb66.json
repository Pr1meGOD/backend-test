{"ast":null,"code":"import { ref, push, set, get } from \"firebase/database\";\nimport { database, auth } from \"./firebase.js\";\nimport { supabase } from \"./supabase.js\";\nexport async function reportItem(formData, imageBlob) {\n  try {\n    const user = auth.currentUser;\n    if (!user) {\n      throw new Error(\"User is not authenticated.\");\n    }\n    const userId = user.uid;\n    const userRef = ref(database, `users/${userId}`);\n    const userSnapshot = await get(userRef);\n    if (!userSnapshot.exists()) {\n      throw new Error(\"User data not found in the database.\");\n    }\n    const userData = userSnapshot.val();\n    const username = userData.name || \"Anonymous\";\n    const itemTypeLower = formData.itemType.toLowerCase();\n    let bucket;\n    if (itemTypeLower === \"lost\") {\n      bucket = \"lost\";\n    } else if (itemTypeLower === \"found\") {\n      bucket = \"found\";\n    } else {\n      throw new Error(\"Invalid item type. Choose 'Lost' or 'Found'.\");\n    }\n    const fileName = `${Date.now()}_${imageBlob.name || \"image.jpg\"}`;\n    const {\n      data: uploadData,\n      error: uploadError\n    } = await supabase.storage.from(bucket).upload(fileName, imageBlob);\n    if (uploadError) {\n      throw uploadError;\n    }\n    const {\n      data: publicData,\n      error: publicError\n    } = supabase.storage.from(bucket).getPublicUrl(uploadData.path);\n    if (publicError) {\n      throw publicError;\n    }\n    const imageUrl = publicData.publicUrl;\n    const timestamp = new Date();\n    const formattedTime = `${timestamp.getDate()}-${timestamp.getMonth() + 1}-${timestamp.getFullYear()} ${timestamp.toLocaleTimeString(\"en-US\", {\n      hour12: false,\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    })}`;\n    const reportData = {\n      itemName: formData.itemName,\n      description: formData.description,\n      question: formData.question,\n      itemType: formData.itemType,\n      imageUrl,\n      timestamp: formattedTime\n    };\n    if (itemTypeLower === \"lost\") {\n      const lostRef = ref(database, `lost/${userId}`);\n      const newLostRef = push(lostRef);\n      await set(newLostRef, reportData);\n    } else if (itemTypeLower === \"found\") {\n      const foundRef = ref(database, `found/${userId}`);\n      const newFoundRef = push(foundRef);\n      await set(newFoundRef, reportData);\n    }\n    const myReportsRef = ref(database, `myreports/${userId}_${username}`);\n    const newMyReportRef = push(myReportsRef);\n    await set(newMyReportRef, reportData);\n    return {\n      success: true,\n      data: reportData\n    };\n  } catch (error) {\n    console.error(\"Error in reporting item:\", error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n}","map":{"version":3,"names":["ref","push","set","get","database","auth","supabase","reportItem","formData","imageBlob","user","currentUser","Error","userId","uid","userRef","userSnapshot","exists","userData","val","username","name","itemTypeLower","itemType","toLowerCase","bucket","fileName","Date","now","data","uploadData","error","uploadError","storage","from","upload","publicData","publicError","getPublicUrl","path","imageUrl","publicUrl","timestamp","formattedTime","getDate","getMonth","getFullYear","toLocaleTimeString","hour12","hour","minute","second","reportData","itemName","description","question","lostRef","newLostRef","foundRef","newFoundRef","myReportsRef","newMyReportRef","success","console","message"],"sources":["E:/Btech 4th sem/mini project/Mini project/src/Components/report_item.js"],"sourcesContent":["import { ref, push, set, get } from \"firebase/database\";\r\nimport { database, auth } from \"./firebase.js\";\r\nimport { supabase } from \"./supabase.js\"; \r\n\r\nexport async function reportItem(formData, imageBlob) \r\n{\r\n  try \r\n  {\r\n    const user = auth.currentUser;\r\n    if (!user) \r\n    {\r\n      throw new Error(\"User is not authenticated.\");\r\n    }\r\n\r\n    const userId = user.uid;\r\n\r\n    const userRef = ref(database, `users/${userId}`);\r\n    const userSnapshot = await get(userRef);\r\n    if (!userSnapshot.exists()) {\r\n      throw new Error(\"User data not found in the database.\");\r\n    }\r\n\r\n    const userData = userSnapshot.val();\r\n    const username = userData.name || \"Anonymous\";\r\n\r\n    const itemTypeLower = formData.itemType.toLowerCase();\r\n    let bucket;\r\n    if (itemTypeLower === \"lost\") \r\n    {\r\n      bucket = \"lost\";\r\n\r\n    } \r\n    else if (itemTypeLower === \"found\") \r\n    {\r\n      bucket = \"found\";\r\n\r\n    } \r\n    else \r\n    {\r\n      throw new Error(\"Invalid item type. Choose 'Lost' or 'Found'.\");\r\n      \r\n    }\r\n\r\n    const fileName = `${Date.now()}_${imageBlob.name || \"image.jpg\"}`;\r\n    const { data: uploadData, error: uploadError } = await supabase\r\n      .storage\r\n      .from(bucket)\r\n      .upload(fileName, imageBlob);\r\n    if (uploadError) \r\n    {\r\n      throw uploadError;\r\n    }\r\n\r\n    const { data: publicData, error: publicError } = supabase\r\n      .storage\r\n      .from(bucket)\r\n      .getPublicUrl(uploadData.path);\r\n    if (publicError) {\r\n      throw publicError;\r\n    }\r\n    const imageUrl = publicData.publicUrl;\r\n\r\n    const timestamp = new Date();\r\n    const formattedTime = `${timestamp.getDate()}-${timestamp.getMonth() + 1}-${timestamp.getFullYear()} ${timestamp.toLocaleTimeString(\"en-US\", {\r\n        hour12: false,\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\",\r\n      })}`;\r\n\r\n    const reportData = {\r\n      itemName: formData.itemName,\r\n      description: formData.description,\r\n      question: formData.question,\r\n      itemType: formData.itemType,\r\n      imageUrl,\r\n      timestamp: formattedTime,\r\n      \r\n    };\r\n\r\n    if (itemTypeLower === \"lost\") \r\n    {\r\n      const lostRef = ref(database, `lost/${userId}`);\r\n      const newLostRef = push(lostRef);\r\n      await set(newLostRef, reportData);\r\n\r\n    } \r\n    else if (itemTypeLower === \"found\") \r\n    {\r\n      const foundRef = ref(database, `found/${userId}`);\r\n      const newFoundRef = push(foundRef);\r\n      await set(newFoundRef, reportData);\r\n\r\n    }\r\n\r\n\r\n    const myReportsRef = ref(database, `myreports/${userId}_${username}`);\r\n    const newMyReportRef = push(myReportsRef);\r\n    await set(newMyReportRef, reportData);\r\n\r\n    return { success: true, data: reportData };\r\n  } \r\n  catch (error) \r\n  {\r\n    console.error(\"Error in reporting item:\", error);\r\n    return { success: false, error: error.message };\r\n\r\n    \r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}