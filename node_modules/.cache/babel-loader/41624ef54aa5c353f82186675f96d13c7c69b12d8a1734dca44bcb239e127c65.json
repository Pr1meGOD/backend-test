{"ast":null,"code":"var _jsxFileName = \"E:\\\\Btech 4th sem\\\\mini project\\\\Mini project\\\\src\\\\Components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../Components/Chat.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { FaPaperPlane } from 'react-icons/fa';\nimport { ref, get, onValue } from \"firebase/database\";\nimport { database, auth } from \"./firebase\";\nimport { sendChatMessage } from \"./chat\";\nimport Loading from \"./loding\";\nimport beginChat from \"../Assets/begin_chat.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const state = location.state || {};\n  const currentUser = auth.currentUser;\n  const computedSenderId = state.senderId || (currentUser ? currentUser.uid : null);\n  const computedSenderName = state.senderName || (currentUser ? currentUser.displayName : computedSenderId);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [chatList, setChatList] = useState([]);\n  const [loadingChats, setLoadingChats] = useState(true);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  useEffect(() => {\n    if (!computedSenderId) return;\n    const chatListRef = ref(database, `ChatList/${computedSenderId}`);\n    const unsubscribe = onValue(chatListRef, snapshot => {\n      const fetchList = async () => {\n        if (snapshot.exists()) {\n          const data = snapshot.val();\n          const entries = await Promise.all(Object.keys(data).map(async rId => {\n            const chatEntry = data[rId];\n            const userRef = ref(database, `users/${rId}`);\n            const userSnapshot = await get(userRef);\n            const userData = userSnapshot.exists() ? userSnapshot.val() : {};\n            const finalName = userData.name || chatEntry.receiverName || rId;\n            return {\n              receiverId: rId,\n              receiverName: finalName,\n              lastUpdated: chatEntry.lastUpdated\n            };\n          }));\n          setChatList(entries);\n        } else {\n          setChatList([]);\n        }\n        setLoadingChats(false);\n      };\n      fetchList();\n    });\n    return () => unsubscribe();\n  }, [computedSenderId]);\n  useEffect(() => {\n    if (!computedSenderId || !selectedChat) return;\n    const chatsRef = ref(database, \"Chats\");\n    const unsubscribeMessages = onValue(chatsRef, snapshot => {\n      if (snapshot.exists()) {\n        const data = snapshot.val();\n        let msgs = [];\n        Object.keys(data).forEach(key => {\n          const msgData = data[key];\n          if (msgData.senderId === computedSenderId && msgData.receiverId === selectedChat.receiverId || msgData.senderId === selectedChat.receiverId && msgData.receiverId === computedSenderId) {\n            msgs.push(msgData);\n          }\n        });\n        msgs.sort((a, b) => a.timestamp - b.timestamp);\n        setMessages(msgs);\n      } else {\n        setMessages([]);\n      }\n    });\n    return () => unsubscribeMessages();\n  }, [computedSenderId, selectedChat]);\n  const fetchChatMessages = async (senderId, receiverId) => {\n    const chatsRef = ref(database, \"Chats\");\n    const snapshot = await get(chatsRef);\n    let msgs = [];\n    if (snapshot.exists()) {\n      const data = snapshot.val();\n      Object.keys(data).forEach(key => {\n        const msgData = data[key];\n        if (msgData.senderId === senderId && msgData.receiverId === receiverId || msgData.senderId === receiverId && msgData.receiverId === senderId) {\n          msgs.push(msgData);\n        }\n      });\n      msgs.sort((a, b) => a.timestamp - b.timestamp);\n    }\n    return msgs;\n  };\n  const handleNavigation = path => {\n    navigate(path);\n  };\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleChatSelect = async chat => {\n    setSelectedChat(chat);\n    const msgs = await fetchChatMessages(computedSenderId, chat.receiverId);\n    setMessages(msgs);\n  };\n  const handleSendMessage = async () => {\n    const trimmedMessage = newMessage.trim();\n    if (trimmedMessage === \"\" || !selectedChat) return;\n    const safeSenderName = computedSenderName || \"Unknown\";\n    const safeReceiverName = selectedChat.receiverName || \"Unknown\";\n    const messageData = await sendChatMessage(computedSenderId, safeSenderName, selectedChat.receiverId, safeReceiverName, trimmedMessage);\n    setMessages([...messages, messageData]);\n    setNewMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"redlabel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar_lost\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home_nav\",\n        onClick: () => handleNavigation('/'),\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lost_nav_no_color\",\n        onClick: () => handleNavigation('/lost'),\n        children: \"Lost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"found_nav\",\n        onClick: () => handleNavigation('/found'),\n        children: \"Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listing_nav\",\n        onClick: () => handleNavigation('/listing'),\n        children: \"My Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response_nav\",\n        onClick: () => handleNavigation('/response'),\n        children: \"My Responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_nav_open\",\n        onClick: () => handleNavigation('/chat'),\n        children: \"My Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_container_chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_left_side_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchQuery,\n          onChange: handleSearchChange,\n          placeholder: \"Search Chats\",\n          className: \"search_bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), loadingChats ? /*#__PURE__*/_jsxDEV(Loading, {\n          loading: loadingChats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_list\",\n          children: chatList.filter(chat => chat.receiverName.toLowerCase().includes(searchQuery.toLowerCase())).map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_item\",\n            onClick: () => handleChatSelect(chat),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat_item_name\",\n              children: chat.receiverName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat_item_message\",\n              children: [\"Last Updated: \", new Date(chat.lastUpdated).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_right_side_container\",\n        children: selectedChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_detail_header\",\n            children: selectedChat.receiverName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages_container\",\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `chat_message ${msg.senderId === computedSenderId ? \"sent\" : \"received\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message_text\",\n                children: msg.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_input_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newMessage,\n              onChange: e => setNewMessage(e.target.value),\n              placeholder: \"Type a message\",\n              className: \"chat_input_box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSendMessage,\n              className: \"send_button\",\n              children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            marginTop: \"200px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: beginChat,\n            alt: \"No responses found\",\n            style: {\n              width: \"300px\",\n              height: \"auto\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Start Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"K/xAVGRd9gAABzQ+5uljQhTEwlA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","FaPaperPlane","ref","get","onValue","database","auth","sendChatMessage","Loading","beginChat","jsxDEV","_jsxDEV","Chat","_s","navigate","location","state","currentUser","computedSenderId","senderId","uid","computedSenderName","senderName","displayName","searchQuery","setSearchQuery","chatList","setChatList","loadingChats","setLoadingChats","selectedChat","setSelectedChat","messages","setMessages","newMessage","setNewMessage","chatListRef","unsubscribe","snapshot","fetchList","exists","data","val","entries","Promise","all","Object","keys","map","rId","chatEntry","userRef","userSnapshot","userData","finalName","name","receiverName","receiverId","lastUpdated","chatsRef","unsubscribeMessages","msgs","forEach","key","msgData","push","sort","a","b","timestamp","fetchChatMessages","handleNavigation","path","handleSearchChange","event","target","value","handleChatSelect","chat","handleSendMessage","trimmedMessage","trim","safeSenderName","safeReceiverName","messageData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","placeholder","loading","filter","toLowerCase","includes","index","Date","toLocaleString","msg","message","e","style","textAlign","marginTop","src","alt","width","height","_c","$RefreshReg$"],"sources":["E:/Btech 4th sem/mini project/Mini project/src/Components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../Components/Chat.css';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { FaPaperPlane } from 'react-icons/fa';\r\nimport { ref, get, onValue } from \"firebase/database\";\r\nimport { database, auth } from \"./firebase\";\r\nimport { sendChatMessage } from \"./chat\";\r\nimport Loading from \"./loding\";\r\nimport beginChat from \"../Assets/begin_chat.png\";\r\n\r\nconst Chat = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const state = location.state || {};\r\n  const currentUser = auth.currentUser;\r\n  const computedSenderId = state.senderId || (currentUser ? currentUser.uid : null);\r\n  const computedSenderName = state.senderName || (currentUser ? currentUser.displayName : computedSenderId);\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [chatList, setChatList] = useState([]);\r\n  const [loadingChats, setLoadingChats] = useState(true);\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!computedSenderId) return;\r\n    const chatListRef = ref(database, `ChatList/${computedSenderId}`);\r\n    const unsubscribe = onValue(chatListRef, (snapshot) => {\r\n      const fetchList = async () => {\r\n        if (snapshot.exists()) {\r\n          const data = snapshot.val();\r\n          const entries = await Promise.all(\r\n            Object.keys(data).map(async (rId) => {\r\n              const chatEntry = data[rId];\r\n              const userRef = ref(database, `users/${rId}`);\r\n              const userSnapshot = await get(userRef);\r\n              const userData = userSnapshot.exists() ? userSnapshot.val() : {};\r\n              const finalName = userData.name || chatEntry.receiverName || rId;\r\n              return {\r\n                receiverId: rId,\r\n                receiverName: finalName,\r\n                lastUpdated: chatEntry.lastUpdated,\r\n              };\r\n            })\r\n          );\r\n          setChatList(entries);\r\n        } else {\r\n          setChatList([]);\r\n        }\r\n        setLoadingChats(false);\r\n      };\r\n      fetchList();\r\n    });\r\n    return () => unsubscribe();\r\n  }, [computedSenderId]);\r\n\r\n  useEffect(() => {\r\n    if (!computedSenderId || !selectedChat) return;\r\n    const chatsRef = ref(database, \"Chats\");\r\n    const unsubscribeMessages = onValue(chatsRef, (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        const data = snapshot.val();\r\n        let msgs = [];\r\n        Object.keys(data).forEach(key => {\r\n          const msgData = data[key];\r\n          if (\r\n            (msgData.senderId === computedSenderId && msgData.receiverId === selectedChat.receiverId) ||\r\n            (msgData.senderId === selectedChat.receiverId && msgData.receiverId === computedSenderId)\r\n          ) {\r\n            msgs.push(msgData);\r\n          }\r\n        });\r\n        msgs.sort((a, b) => a.timestamp - b.timestamp);\r\n        setMessages(msgs);\r\n      } else {\r\n        setMessages([]);\r\n      }\r\n    });\r\n    return () => unsubscribeMessages();\r\n  }, [computedSenderId, selectedChat]);\r\n\r\n  const fetchChatMessages = async (senderId, receiverId) => {\r\n    const chatsRef = ref(database, \"Chats\");\r\n    const snapshot = await get(chatsRef);\r\n    let msgs = [];\r\n    if (snapshot.exists()) {\r\n      const data = snapshot.val();\r\n      Object.keys(data).forEach(key => {\r\n        const msgData = data[key];\r\n        if (\r\n          (msgData.senderId === senderId && msgData.receiverId === receiverId) ||\r\n          (msgData.senderId === receiverId && msgData.receiverId === senderId)\r\n        ) {\r\n          msgs.push(msgData);\r\n        }\r\n      });\r\n      msgs.sort((a, b) => a.timestamp - b.timestamp);\r\n    }\r\n    return msgs;\r\n  };\r\n\r\n  const handleNavigation = (path) => {\r\n    navigate(path);\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const handleChatSelect = async (chat) => {\r\n    setSelectedChat(chat);\r\n    const msgs = await fetchChatMessages(computedSenderId, chat.receiverId);\r\n    setMessages(msgs);\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    const trimmedMessage = newMessage.trim();\r\n    if (trimmedMessage === \"\" || !selectedChat) return;\r\n    const safeSenderName = computedSenderName || \"Unknown\";\r\n    const safeReceiverName = selectedChat.receiverName || \"Unknown\";\r\n    const messageData = await sendChatMessage(\r\n      computedSenderId,\r\n      safeSenderName,\r\n      selectedChat.receiverId,\r\n      safeReceiverName,\r\n      trimmedMessage\r\n    );\r\n    setMessages([...messages, messageData]);\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"redlabel\"></div>\r\n      <div className=\"navbar_lost\">\r\n        <div className=\"home_nav\" onClick={() => handleNavigation('/')}>Home</div>\r\n        <div className=\"lost_nav_no_color\" onClick={() => handleNavigation('/lost')}>Lost</div>\r\n        <div className=\"found_nav\" onClick={() => handleNavigation('/found')}>Found</div>\r\n        <div className=\"listing_nav\" onClick={() => handleNavigation('/listing')}>My Listing</div>\r\n        <div className=\"response_nav\" onClick={() => handleNavigation('/response')}>My Responses</div>\r\n        <div className=\"chat_nav_open\" onClick={() => handleNavigation('/chat')}>My Chats</div>\r\n      </div>\r\n\r\n      <div className=\"main_container_chat\">\r\n        <div className=\"main_left_side_container\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchQuery}\r\n            onChange={handleSearchChange}\r\n            placeholder=\"Search Chats\"\r\n            className=\"search_bar\"\r\n          />\r\n          {loadingChats ? (\r\n            <Loading loading={loadingChats} />\r\n          ) : (\r\n            <div className=\"chat_list\">\r\n              {chatList\r\n                .filter(chat => chat.receiverName.toLowerCase().includes(searchQuery.toLowerCase()))\r\n                .map((chat, index) => (\r\n                  <div key={index} className=\"chat_item\" onClick={() => handleChatSelect(chat)}>\r\n                    <div className=\"chat_item_name\">{chat.receiverName}</div>\r\n                    <div className=\"chat_item_message\">\r\n                      Last Updated: {new Date(chat.lastUpdated).toLocaleString()}\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"main_right_side_container\">\r\n          {selectedChat ? (\r\n            <div className=\"chat_detail\">\r\n              <div className=\"chat_detail_header\">{selectedChat.receiverName}</div>\r\n              <div className=\"messages_container\">\r\n                {messages.map((msg, index) => (\r\n                  <div key={index} className={`chat_message ${msg.senderId === computedSenderId ? \"sent\" : \"received\"}`}>\r\n                    <span className=\"message_text\">{msg.message}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"chat_input_container\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newMessage}\r\n                  onChange={(e) => setNewMessage(e.target.value)}\r\n                  placeholder=\"Type a message\"\r\n                  className=\"chat_input_box\"\r\n                />\r\n                <button onClick={handleSendMessage} className=\"send_button\">\r\n                  <FaPaperPlane />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div style={{ textAlign: \"center\", marginTop: \"200px\" }}>\r\n            <img\r\n              src={beginChat}\r\n              alt=\"No responses found\"\r\n              style={{ width: \"300px\", height: \"auto\" }}\r\n            />\r\n            <h3>Start Chat</h3>\r\n          </div>\r\n            \r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}